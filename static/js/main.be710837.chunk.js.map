{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","style","color","FeedbackOptions","options","onLeaveFeedback","className","styles","container","map","option","idx","onClick","Section","children","title","defaultProps","App","useState","setGood","setNeutral","setBad","countTotalFeedback","toFixed","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0NAOeA,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC6B3BC,EA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,4CACCJ,GAAQC,GAAWC,EAClB,+BACE,qBAAIG,MAAO,CAAEC,MAAO,SAApB,mBAAsCN,KACtC,qBAAIK,MAAO,CAAEC,MAAO,UAApB,sBAA0CL,KAC1C,qBAAII,MAAO,CAAEC,MAAO,OAApB,kBAAmCJ,KACnC,yCAAYC,KACZ,oDAEGC,EAFH,WAMF,cAAC,EAAD,CAAcN,QAAQ,0B,gBCKbS,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAkBC,QAASP,EAAgBK,GAA3C,SACGA,GADUC,SCLfE,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACd,qCACE,6BAAKA,IACJD,MAILD,EAAQG,aAAe,CACrBF,SAAU,GACVC,MAAO,IAMMF,QCkCAI,EA5CH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAEMhB,EAAkB,CACtBT,KAAM,WACJuB,GAAQ,SAACvB,GAAD,OAAUA,EAAO,MAE3BC,QAAS,WACPuB,GAAW,SAACvB,GAAD,OAAaA,EAAU,MAEpCC,IAAK,WACHuB,GAAO,SAACvB,GAAD,OAASA,EAAM,OAIpBwB,EAAqB,kBAAM1B,EAAOC,EAAUC,GAUlD,OACE,eAAC,EAAD,CAASiB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEX,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBA,IAEnB,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,oBAlBiBJ,EACC0B,IAEqC,KAAKC,gBCvBpEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,sC","file":"static/js/main.be710837.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <b>{message}</b>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <h2>Statistics</h2>\r\n    {good || neutral || bad ? (\r\n      <ul>\r\n        <li style={{ color: \"green\" }}>good: {good}</li>\r\n        <li style={{ color: \"orange\" }}>neutral: {neutral}</li>\r\n        <li style={{ color: \"red\" }}>bad: {bad}</li>\r\n        <li>total: {total}</li>\r\n        <li>\r\n          positive feedback:\r\n          {positivePercentage} %\r\n        </li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      {options.map((option, idx) => (\r\n        <button key={idx} onClick={onLeaveFeedback[option]}>\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.exact({\r\n    good: PropTypes.func.isRequired,\r\n    neutral: PropTypes.func.isRequired,\r\n    bad: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nconst Section = ({ children, title }) => (\r\n  <>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.defaultProps = {\r\n  children: [],\r\n  title: \"\",\r\n};\r\nSection.propTypes = {\r\n  children: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\nexport default Section;\r\n","import { useState } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\n\nimport Section from \"./components/Section\";\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = {\n    good: () => {\n      setGood((good) => good + 1);\n    },\n    neutral: () => {\n      setNeutral((neutral) => neutral + 1);\n    },\n    bad: () => {\n      setBad((bad) => bad + 1);\n    },\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    const goodFeedback = good;\n    const totalFeedback = countTotalFeedback();\n\n    const positiveFeedback = ((goodFeedback / totalFeedback) * 100).toFixed();\n    return positiveFeedback;\n  };\n\n  return (\n    <Section title=\"Please leave feedback\">\n      <FeedbackOptions\n        options={[\"good\", \"neutral\", \"bad\"]}\n        onLeaveFeedback={onLeaveFeedback}\n      />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback()}\n        positivePercentage={countPositiveFeedbackPercentage()}\n      />\n    </Section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__3EcYs\"};"],"sourceRoot":""}